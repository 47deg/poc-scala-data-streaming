version: '3.7'

services:

  zookeeper:
    container_name: zookeeper
    restart: always
    # https://hub.docker.com/_/zookeeper/tags
    image: zookeeper:3.8.1
    ports:
      - '2181:2181'
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      retries: 20
      interval: 10s

  kafka:
    container_name: kafka
    hostname: kafka
    restart: always
    # https://hub.docker.com/r/confluentinc/cp-kafka/tags
    image: confluentinc/cp-kafka:7.4.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: 'data-generator:1:1,input-topic:1:1,output-topic:1:1'
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: nc -z kafka 9092 || exit 1
      interval: 10s
      retries: 5
      start_period: 20s

  schema-registry:
    container_name: schema-registry
    hostname: schema-registry
    restart: always
    # https://hub.docker.com/r/confluentinc/cp-schema-registry/tags
    image: confluentinc/cp-schema-registry:7.4.0
    environment:
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
    ports:
      - '8081:8081'
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: echo srvr | nc schema-registry 8081 || exit 1
      retries: 20
      interval: 10s
      start_period: 10s
